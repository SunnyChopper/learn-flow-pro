// System Libraries
import { Between, DataSource } from "typeorm";
import moment from "moment";

// Database
import { SessionArticleSort } from "src/entity/SessionArticleSort";
import { createDataSource } from "src/utils/database";

class StatsService {

    private async initializeDataSource(source: DataSource) {
        if (!source.isInitialized) {
            await source.initialize();
        }
    }

    private async destroyDataSource(source: DataSource) {
        if (source.isInitialized) {
            await source.destroy();
        }
    }
    
    public async getNumberOfArticlesSortedForDate(date: string): Promise<number> {
        const AppDataSource = await createDataSource();
        await this.initializeDataSource(AppDataSource);
        const startOfDay = moment(date).startOf('day').toDate();
        const endOfDay = moment(date).endOf('day').toDate();
        const sessionArticleSortRepository = AppDataSource.getRepository(SessionArticleSort);
        const sessionArticleSorts: SessionArticleSort[] = await sessionArticleSortRepository.findBy({ createdAt: Between(startOfDay, endOfDay) });
        console.log("ðŸš€ ~ file: StatsService.ts:29 ~ StatsService ~ getNumberOfArticlesSortedForDate ~ sessionArticleSorts:", sessionArticleSorts)
        await this.destroyDataSource(AppDataSource);
        return sessionArticleSorts.length;
    }

}

export default StatsService;